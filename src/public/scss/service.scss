@mixin tile-size($number, $margin: 0.8rem) {
    $size: calc(((100vw - 2rem) / #{$number}) - (#{$margin} / #{$number} * #{$number - 1}));
    width: $size;
    height: $size;

    @if $margin != 1rem {
        margin-top: $margin;
        margin-right: $margin;

        @for $i from 1 through $number {
            &:nth-child(#{$i}) {
                margin-top: 1rem;
            }
        }

        &:nth-child(#{$number}n) {
            margin-right: 1rem;
        }
    }
}
@mixin tile-width($number, $margin: 1rem) {
    $size: calc(((100vw - 2rem) / #{$number}) - (#{$margin} / #{$number} * #{$number - 1}));
    width: $size;

    @if $margin != 1rem {
        margin-top: $margin;
        margin-right: $margin;

        @for $i from 1 through $number {
            &:nth-child(#{$i}) {
                margin-top: 1rem;
            }
        }

        &:nth-child(#{$number}n) {
            margin-right: 1rem;
        }
    }
}
@mixin camera-tile-inner-height($number, $wr, $hr, $margin: 0.8rem) {
    height: calc(((((100vw - 2rem) / #{$wr}) * #{$hr}) / #{$number}) - (#{$margin} / #{$number} * #{$number - 1}));
}

.service-wrapper {
    width: 6.8rem;
    height: 6.8rem;

    margin: 1rem;

    vertical-align: top;

    @media (min-width: 680px) and (max-width: 768px) {
        @include tile-size(5, 1rem);
    }
    @media (min-width: 600px) and (max-width: 679px) {
        @include tile-size(5);
    }
    @media (min-width: 520px) and (max-width: 599px) {
        @include tile-size(4, 1rem);
    }
    @media (min-width: 490px) and (max-width: 519px) {
        @include tile-size(4);
    }
    @media (min-width: 410px) and (max-width: 489px) {
        @include tile-size(3, 1rem);
    }
    @media (min-width: 319px) and (max-width: 409px) {
        @include tile-size(3);
    }
    @media (min-width: 360px) and (max-width: 379px) {
        font-size: 0.9rem;
    }
    @media (min-width: 319px) and (max-width: 359px) {
        font-size: 0.8rem;
    }
    @media (min-width: 210px) and (max-width: 318px) {
        @include tile-size(2);
    }
    @media (min-width: 240px) and (max-width: 279px) {
        font-size: 0.9rem;
    }
    @media (min-width: 210px) and (max-width: 239px) {
        font-size: 0.8rem;
    }
    @media (max-width: 209px) {
        @include tile-size(1);
    }

    &.service-wrapper-camera {
        width: calc(100vw - 2rem);
        height: auto;

        @media (min-width: 768px) {
            @include tile-width(2);
        }
        @media (min-width: 1024px) {
            @include tile-width(3);
        }
        @media (min-width: 1440px) {
            @include tile-width(4);
        }
        @media (min-width: 1920px) {
            @include tile-width(5);
        }
        @media (min-width: 2480px) {
            @include tile-width(6);
        }
    }
}

.service {
    width: inherit;
    height: inherit;

    .service-tile-background {
        width: inherit;
        height: inherit;
        margin-bottom: -100%;
        border-radius: 0.8em;
        background-position: center;
        background-size: cover;
    }

    .service-tile-contents {
        background-color: rgba(255, 255, 255, 0.9);

        @media (prefers-reduced-transparency: reduce) {
            background-color: #ffffff;
        }

        @include dark-theme {
            background-color: transparentize($dark, 0.1);
            color: $gray-200;

            @media (prefers-reduced-transparency: reduce) {
                background-color: $dark;
            }
        }

        @supports (backdrop-filter: blur(20px)) or (-webkit-backdrop-filter: blur(20px)) {
            background-color: rgba(255, 255, 255, 0.5);
            -webkit-backdrop-filter: blur(20px);
            backdrop-filter: blur(20px);

            @media (prefers-reduced-transparency: reduce) {
                background-color: #ffffff;
            }

            @include dark-theme {
                background-color: transparentize($dark, 0.5);

                @media (prefers-reduced-transparency: reduce) {
                    background-color: $dark;
                }
            }
        }

        border-radius: 0.8em;

        width: inherit;
        height: inherit;

        padding: 0.9em;
        font-size: 0.8em;

        display: flex;
        flex-direction: column;

        .service-wrapper-camera & {
            padding: 0;
        }
    }

    .service-top {
        height: 30px;
        flex: 0 0 auto;
        display: flex;

        .service-icon,
        .icon {
            width: 30px;
        }
    }

    .service-top,
    .service-info {
        .service-status-icon .icon-warning {
            width: 20px;
        }
        .service-status-icon .icon-spinner {
            width: 18px;
            font-size: 18px;
        }
    }

    svg.icon {
        fill: rgba(0, 0, 0, 0.7);
    }

    img.icon {
        filter: opacity(0.7);
    }

    @include dark-theme {
        svg.icon {
            fill: rgba(255, 255, 255, 0.7);
        }

        img.icon {
            filter: opacity(0.7) invert(1);
        }
    }

    .service-info {
        flex: 0 0 auto;

        .service-wrapper-camera & {
            padding: 0.9em;
            display: flex;
            height: 3em;
        }
    }

    h5 {
        font-size: 1em;
        font-weight: 600;
    }

    h5,
    p {
        margin: 0;

        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    &.unsupported-service,
    &.unavailable-accessory,
    .camera-error-wrapper {
        .service-status {
            color: $red;
            font-weight: 600;
        }
    }
    &.unsupported-service,
    &.unavailable-accessory {
        .service-status {
            font-size: 11px;
        }
    }

    .service-wrapper-camera & .camera-image-wrapper,
    .service-wrapper-camera & .camera-error-wrapper {
        height: calc(((100vw - 2rem) / 16) * 9);

        @media (min-width: 768px) {
            @include camera-tile-inner-height(2, 16, 9);
        }
        @media (min-width: 1024px) {
            @include camera-tile-inner-height(3, 16, 9);
        }
        @media (min-width: 1440px) {
            @include camera-tile-inner-height(4, 16, 9);
        }
        @media (min-width: 1920px) {
            @include camera-tile-inner-height(5, 16, 9);
        }
        @media (min-width: 2480px) {
            @include camera-tile-inner-height(6, 16, 9);
        }
    }

    .service-wrapper-camera & canvas {
        width: 100%;
        height: 100%;
        border-bottom-left-radius: 0.8em;
        border-bottom-right-radius: 0.8em;
    }

    .camera-error-wrapper {
        display: flex;
        flex-direction: column;
        padding: 0 0.9em 0.9em;
        text-align: center;
    }

    &.active {
        .service-tile-contents {
            background-color: rgba(255, 255, 255, 0.9);
            color: $gray-900;

            @include dark-theme {
                // background-color: rgba(0, 0, 0, 0.9);

                // Same as before because specificity
                background-color: rgba(255, 255, 255, 0.9);
                color: $gray-900;
            }
        }
        .service-tile-background + .service-tile-contents {
            background-color: rgba(255, 255, 255, 0.7);

            @include dark-theme {
                // background-color: rgba(0, 0, 0, 0.7);

                // Same as before because specificity
                background-color: rgba(255, 255, 255, 0.7);
            }
        }

        svg.icon {
            fill: rgba(0, 0, 0, 1);
        }

        img.icon {
            filter: opacity(1);
        }

        @include dark-theme {
            svg.icon {
                // fill: rgba(255, 255, 255, 1);

                // Same as before because specificity
                fill: rgba(0, 0, 0, 1);
            }

            img.icon {
                // filter: opacity(1) invert(1);

                // Same as before because specificity
                filter: opacity(1);
            }
        }
    }

    transition: opacity 0.1s ease;

    &.details-open {
        opacity: 0;
    }

    .service-wrapper-editing & {
        animation: shake 0.3s ease infinite;
    }
    .service-wrapper-editing.service-wrapper-camera & {
        animation-name: shake-camera;
    }
}

@keyframes shake {
    0% {
        transform: rotate(0deg);
    }

    25% {
        transform: rotate(-3deg);
    }

    75% {
        transform: rotate(3deg);
    }
}
@keyframes shake-camera {
    0% {
        transform: rotate(0deg);
    }

    25% {
        transform: rotate(-1deg);
    }

    75% {
        transform: rotate(1deg);
    }
}

.add-accessory .settings-window {
    max-width: 550px;
}

.discovered-accessories {
    margin-right: -1rem;

    .discovered-accessory-wrapper {
        display: inline-block;
        // width: 6.8rem;
        width: 14.6rem;
        height: 6.8rem;

        margin: 0 1rem 1rem 0;

        vertical-align: top;
    }
}
